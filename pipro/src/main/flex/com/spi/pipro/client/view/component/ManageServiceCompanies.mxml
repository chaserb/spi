<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
          xmlns:s="library://ns.adobe.com/flex/spark" 
          xmlns:mx="library://ns.adobe.com/flex/mx"
          xmlns:c="com.spi.pipro.client.view.component.*"
          width="100%"
          height="100%">
   
   <fx:Metadata>
      [Event(name="accountAdd", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountDelete", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountSave", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountCancel", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountUpdateNow", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountSelect", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountPropertyChanged", type="com.spi.pipro.client.view.event.AccountEvent")]
      [Event(name="accountPropertyCommitted", type="com.spi.pipro.client.view.event.AccountEvent")]
   </fx:Metadata>
   
   <fx:Script>
      <![CDATA[
         import com.spi.pipro.client.model.vo.ServiceCompanyAccountVO;
         import com.spi.pipro.client.util.Constants;
         import com.spi.pipro.client.view.ManageServiceCompaniesMediator;
         import com.spi.pipro.client.view.event.AccountEvent;
         
         import mx.collections.ArrayCollection;
         import mx.events.FlexEvent;
         
         import spark.events.TextOperationEvent;
         
         [Bindable]
         public var companyNames:Dictionary = new Dictionary();

         [Bindable]
         public var accounts:ArrayCollection = new ArrayCollection(); // of ServiceCompanyAccountVO
         
         [Bindable]
         public var account:ServiceCompanyAccountVO = new ServiceCompanyAccountVO();
         
         protected function changeHandler(event:TextOperationEvent):void
         {
            dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_PROPERTY_CHANGED, event.target.id));
         }
         
         protected function valueCommitHandler(event:FlexEvent):void
         {
            dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_PROPERTY_COMMITTED, event.target.id));
         }
      ]]>
   </fx:Script>
   
   <s:states>
      <s:State name="selectAccount"/>
      <s:State name="editAccount"/>
   </s:states> 
   
   <s:transitions>
      <s:Transition id="myTransition" fromState="*" toState="*">
         <s:Fade duration="500" targets="{[addButton,deleteButton,saveButton,cancelButton,accountViewStack,accountTabBar]}"/>            
      </s:Transition>
   </s:transitions>
   
   <!-- Master Panel -->
   <s:Group id="masterPanel" height="100%" width="50%">
      <mx:Image top="10" left="10" height="32" width="32" source="@Embed('assets/buildings.png')"/>
      <s:Label top="10" left="50" text="Manage Service Company Accounts" fontSize="25" fontWeight="bold"/>
      
      <!-- List of accounts -->
      <mx:DataGrid id="accountsList" dataProvider="{accounts}" height="300" top="50" left="10" right="10" 
                   allowMultipleSelection="false" change="dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_SELECT))">
         <mx:columns>
            <mx:DataGridColumn headerText="Account Name" dataField="name"/>
            <mx:DataGridColumn headerText="Last Update" dataField="lastUpdateTime"/>
            <mx:DataGridColumn headerText="New Orders" dataField="lastNewOrders"/>
            <mx:DataGridColumn headerText="Cancelled Orders" dataField="lastCancelledOrders"/>
            <mx:DataGridColumn headerText="Status" dataField="lastStatus"/>
         </mx:columns>
      </mx:DataGrid>
      <mx:Button id="addButton" icon="@Embed('assets/add.png')" disabledIcon="@Embed('assets/add_disable.png')" 
                 label="Add New Person" y="375" horizontalCenter="-75" 
                 click="dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_ADD))" label.selectAccount="Add New Account"/>
      <mx:Button id="deleteButton" icon="@Embed('assets/cross.png')" disabledIcon="@Embed('assets/cross_disable.png')" 
                 label="Remove Person" y="375" horizontalCenter="75" enabled="false"
                 click="dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_DELETE))" label.selectAccount="Remove Account"/>
   </s:Group>
   
   <!-- Detail Panel -->
   <s:Group id="detailPanel" height="100%" width="50%">
      <s:TabBar id="accountTabBar" dataProvider="{accountViewStack}" includeIn="editAccount" left="10" top="50"/>
      <mx:ViewStack id="accountViewStack" includeIn="editAccount" left="10" right="10" top="75" height="275" borderStyle="solid" creationPolicy="all">
         <s:NavigatorContent id="accountSetupTab" label="Account Setup">
            <mx:Form id="accountForm" labelWidth="120">
               <mx:FormItem label="Account Name" required="true">
                  <s:TextInput id="nameInput" text="@{account.name}" restrict="{Constants.NAME_RESTRICT}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="Service Company" required="true">
                  <s:TextInput id="companyNameInput" text="@{account.companyName}" restrict="{Constants.NAME_RESTRICT}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="User Name" required="true">
                  <s:TextInput id="userNameInput" text="@{account.userName}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="Password" required="true">
                  <s:TextInput id="passwordInput" text="{account.password}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
            </mx:Form>
         </s:NavigatorContent>
         <s:NavigatorContent id="updateSetupTab" label="Update Setup">
            <mx:Form id="addressForm" labelWidth="120">
               <!-- mx:FormItem label="Address 1">
                  <s:TextInput id="address1Input" text="@{account.address.address1}" restrict="{Constants.ADDRESS_RESTRICT}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="Address 2">
                  <s:TextInput id="address2Input" text="@{account.address.address2}" restrict="{Constants.ADDRESS_RESTRICT}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="City">
                  <s:TextInput id="cityInput" text="@{account.address.city}" restrict="{Constants.ADDRESS_RESTRICT}"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="State">
                  <s:TextInput id="stateInput" text="@{account.address.state}" restrict="{Constants.ALPHA_RESTRICT}" maxChars="2"
                               change="changeHandler(event)" 
                               valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem>
               <mx:FormItem label="Zip">
                  <c:TextInputNumber id="zipInput" number="@{account.address.zip}" restrict="{Constants.POSITIVE_NUMBER_RESTRICT}" maxChars="5" minChars="5" 
                                     change="changeHandler(event)" 
                                     valueCommit="valueCommitHandler(event)"/>
               </mx:FormItem -->
            </mx:Form>
         </s:NavigatorContent>
         <s:NavigatorContent id="updateHistoryTab" label="Update History">
         </s:NavigatorContent>
      </mx:ViewStack>
      <mx:Button id="saveButton" icon="@Embed('assets/accept.png')"  disabledIcon="@Embed('assets/accept_disable.png')"
                 label="Save Changes" y="375" horizontalCenter="-50" includeIn="editAccount" enabled="false"
                 click="dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_SAVE))"/>
      <mx:Button id="cancelButton" icon="@Embed('assets/cross.png')"  disabledIcon="@Embed('assets/cross_disable.png')"
                 label="Cancel" y="375" horizontalCenter="50" includeIn="editAccount"
                 click="dispatchEvent(new AccountEvent(AccountEvent.ACCOUNT_CANCEL))"/>
   </s:Group>
   
</s:HGroup>
